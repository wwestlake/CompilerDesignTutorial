


let compute (a:float) (b:float) =  a * b

let test q r = {
    let test2 a b = {
        a + b
    }

    if a then test2(a, b) else b
}

let str = "this is a string"

let chr1 = 'a'
let chr2 = '"'
let chr3 = '\n'
let chr4 = '\t'
let chr5 = '\077'
let chr6 = '\r'
let chr7 = '\v'
let chr8 = '\''

let a = (1,2,'a',"this is a string", "a tuple", 42.5, an_identifier)

let mylist = [1, 2, 3, 4, 5]

let myOtherList = [3.5, 4.5, 42.2]

let r = 3

let fibonacci n = {
    if n < 3 then 1 else fibonacci(n-1)  + fibonacci(n - 2);
}


let start () = {
    fibonacci(25);
    compute(3, 2);
    test(4, 5);
    print "This is a test";
    print 1 + 2;
    print 7/5;
    print a;
}

record MyRecord = {
    a : int;
    b : string;
    c : char;
    d : float;
    e : bool;
    f : byte;
    q : int list;
    r : tuple int * float * string;
}

enumerate MyEnum = {
    | A of int;
    | B;
    | C of float;
}
